This is my OpenBSD configuration. Below are instructions for installing and setting up the system.

** Install the base system
Follow the instructions at https://www.openbsd.org/faq/faq4.html.

The following assumes that you have succesfully installed OpenBSD base, are connected to the Internet via Ethernet and are using hardware with sufficient drivers.
** Configure doas
#+BEGIN_SRC sh
su
echo "permit nopass keepenv [username]" > /etc/doas.conf # Keep in mind $USER is root here. There [username] needs to be manually replaced with your username.
exit
#+END_SRC

doas works a lot like sudo. It lets you run commands as root from another user. The nopass keyword lets us run commands as root without having to type our password. If you do not want this to be the case you can simply remove that keyword.

** Install the configuration
#+BEGIN_SRC sh
doas pkg_add git
git clone https://github.com/olav35/openbsd /tmp/openbsd
mv /tmp/openbsd/* ~
mv /tmp/openbsd/.* ~
#+END_SRC
Now the system is configured to use my cwm configuration instead of the default fvwm based one. At this point you should reboot to enter a much more pleasurable window manager (imo). Therein pressing 4-Return opens xterm. 4-Return is cwm for Win-Enter.

** Install propietary firmware packages
#+BEGIN_SRC sh
doas fw_update
#+END_SRC

** Set up WiFi
Whereas configuring WiFI on Linux is a total mess involving many different tools on OpenBSD you just need one tool and a text editor.

Run the following command to list your network interfaces.
#+BEGIN_SRC sh
doas ifconfig
#+END_SRC

The WiFi interface will probably be called iwn0 or contain be in the wlan group.

To configure a WiFi connection write the following to =/etc/hostname.[network_interface]=.

*WARNING* Unless you have encrypted your storage unit this will store your WiFi password in plain text.

#+BEGIN_SRC
join [ssid] wpakey [password]
dhcp
inet6 autoconf
#+END_SRC

More networks can be added by appending join declarations after the current one.

Now plug out your Ethernet cable, =doas reboot= your machine and =ping fossegr.im=.

** Install other essential packages
I generally try relying on base software as much as possible, but there are some packages I cannot live without.

I believe the only media player in OpenBSD base is aucat. Aucat only plays waw, aiff and au files which is not enough for me. ffplay which is included in the ffmpeg package plays... Everything (run =ffplay -formats= for a nice wall of text).

To use ffplay you should know at least two options. Those are =-nodisp= and =-autoexit=. =-nodisp= removes the annoying visualization (might want to keep that on for videos and images though ;)) and =-autoexit= closes the player when it reaches the end of a media file. The default behavior is to keep ffplay running without playing anying which I find quite puzzling.

ffmpeg itself is also great for screen recording, converting, resizing and a million other things.

#+BEGIN_SRC sh
doas pkg_add ffmpeg
#+END_SRC

A browser is also needed. I use Chromium because Chrome and its descendants(which is to say basically every modern browser except Safari and firefox) are unfortunately the de facto standard for web development which I care about. Firefox is also available in the official repositories and should just work. Unfortunately there is no Brave at the moment.
#+BEGIN_SRC sh
doas pkg_add chromium
#+END_SRC

Aside from ed the editors in base are vi and mg. Leaving aside historical reasons, mg is to emacs as vi is to vim. That is to say a more limited and minimal version. In fact mg and vi are so limited that neither of them supports unicode.

nvi is a vi clone that supports wide characters. Aside from that it is mostly the same as base vi.

#+BEGIN_SRC sh
doas pkg_add nvi
#+END_SRC

mupdf is a simple pdf viewer that just works
#+BEGIN_SRC sh
doas pkg_add mupdf
#+END_SRC

I also install hub although it is not in any way coupled with the res t of the system.
#+BEGIN_SRC sh
doas pkg_add hub
#+END_SRC

** Power management
#+BEGIN_SRC
doas rcctl enable apmd
doas rcctl set apmd flags -A
doas rcctl start apmd
#+END_SRC

** Compile src/*
There are two directories for local executables, =sh/= and =bin/=. Shell- and other scripts live in =sh/= whereas compiled executables live in =bin/=. =bin/= is not version controlled, but the source code is available in =src/=. To compile and deploy them to =bin/= simply run the following command. No external dependendencies or further setup is required.
#+BEGIN_SRC sh
mkdir ~/bin && make -C ~/src
#+END_SRC

** Conclusion
If you are to use this configuration is suggest taking a peek at all the files. There are only 14 non-directory files and they should all be well readable. If you do not understand something, that is a bug and I will do my best to fix it :). Remember that man pages are your friend and are worth consulting before me for your own sake. The OpenBSD man pages are much better than that of Linux / GNU and most other software projects you will run into.

Happy hacking!
